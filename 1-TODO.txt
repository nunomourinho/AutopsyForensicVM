---> Make adicional comments and code documentation

Network firewall fix:
---> Review firewall rules


AUTHENTICATION
---> Multifactor autentication: https://django-two-factor-auth.readthedocs.io/en/stable/index.html
---> Authentication: Integrate with google authentication. Use this link as a reference:
https://www.section.io/engineering-education/django-google-oauth/

---> Create aditional exceptions in the code



SNAP MODE: Run a machine in snap mode:
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
---> Change forensic2v script so that in the snap mode it creates a new script file with mount script to mount the dd, efw or
aff forensic image

---> Create a new webservice that mounts a folder inside the other folder
---> Change the webservice to also mount the original forensic image

---> Sequence to run: Determine free port on server, Create ssh connection with port redirect to samba port, mount samba share on mnt folder, mount image on efw or aff folder via script,      run the machine
---> Sequence to stop. Stop the machine, umount aff, umount mnt, terminate samba session
---> Create a new webservice that umounts a folder
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=



---> Reorganize project: Create a folder with the external bin files, create a folder for config files, change code accordingly

---> Compile and reorganize sources

---> BONUS: Authentication: Integrate with autenticacao.gov (Portugal)

---> Create function to list and delete shares

AUTOMATED MALWARE DETECTION:

---> Detect malware (memory or others-Yara RULES or Others)
1) tshark to convert ip capture to ip list. 2) process ip list with ip identification
Use scapy: https://incognitjoe.github.io/reading-pcap-with-scapy.html
https://chat.openai.com/share/a758fd60-fce1-4b08-aece-7bbb02469796

(Idea: Use alien vault pulses to detect malware. Use tor exit nodes to detect hidden channels)
Sources: 
https://github.com/abusech/YARAify ---> Python examples to find malware from md5, sha1, sha256 hashs
https://abuse.ch/ ---> API to search malware samples. It also allows to download malware samples (bad idea)
https://github.com/OpenCTI-Platform/opencti ---> Investigate
https://www.filigran.io/en/solutions/products/opencti/ --> Investigate
https://www.misp-project.org/ ---> Threat sharing plataform
https://www.misp-project.org/feeds/ ---> Feeds that base of this project
https://github.com/AlienVault-OTX/OTX-Python-SDK/blob/master/examples/is_malicious/is_malicious.py --> How using the api one can check if the file is malicious
https://www.dan.me.uk/ ---> Ip addresses that sould be blocked

EVIDENCE DISK: 
---> Create the fields in the interface needed to resize the virtual forensic analysis drive (size)


CPU
---> Create webservice that reads number of CPUS from script file
---> Create a button that changes the number of cpus of the vm on the script

INIT FIX:
---> Make the system detected if is called by parameter. It it is, load is inicial configuration from autopsy. 
Now it is wrongly reading he local json config first. Watchout for samba share before convertion. Check the autofill path


FINETTUNING FIX: 
---> After converting a image one should call updateinterface.
---> Centralize all actions in update interface!

Optional:
---> Auto logout if uuid and port do not match any of the running machines -> Prevent bruteforce

VIDEO RECORDING
---> Record sound


